class BLEDevice{constructor(t,i,e,a,s){if(this.namePrefix=t,this.writeServiceUuid=i,this.notifyServiceUuid=e,this.writeCharUuid=a,this.notifyCharUuid=s,this.deviceName="",this.server=null,this.writeChar=null,this.notifyChar=null,this.constructor==BLEDevice)throw new Error("Abstract classes can't be instantiated.")}async connect(){try{if(void 0!==navigator.bluetooth.getDevices){(await navigator.bluetooth.getDevices()).length>0&&(this.device=self.devices.find((t=>t.name.startsWith(this.namePrefix))))}this.device||(this.device=await navigator.bluetooth.requestDevice({filters:[{namePrefix:this.namePrefix}],optionalServices:[this.writeServiceUuid,this.notifyServiceUuid]})),console.log(`Connecting to device ${this.device.name}`),this.server=await this.device.gatt.connect();const t=await this.server.getPrimaryService(this.writeServiceUuid),i=await this.server.getPrimaryService(this.notifyServiceUuid);this.writeChar=await t.getCharacteristic(this.writeCharUuid),this.notifyChar=await i.getCharacteristic(this.notifyCharUuid),await this.notifyChar.startNotifications(),await this.notifyChar.addEventListener("characteristicvaluechanged",this.read.bind(this)),this.onConnect()}catch(t){this.onError(t)}}async write(t){await this.writeChar.writeValue(t)}async disconnect(){this.device.gatt.connected?await this.device.gatt.disconnect():console.log("Bluetooth Device is already disconnected"),this.onDisconnect()}read(t){this.onData(t.target.value)}onConnect(){console.log(`Connected to ${this.device.name}`)}onDisconnect(){console.log(`Disonnected from ${this.device.name}`)}onData(t){console.log(t)}onError(t){console.error(t)}}
const NAME_PREFIX="RNG-SYNC",WRITE_SERVICE_UUID="00000001-0000-1000-8000-00805f9b34fb",NOTIFY_SERVICE_UUID="00000001-0000-1000-8000-00805f9b34fb",WRITE_CHAR_UUID="00000002-0000-1000-8000-00805f9b34fb",NOTIFY_CHAR_UUID="00000003-0000-1000-8000-00805f9b34fb";class RNGSyNC extends BLEDevice{constructor(){super("RNG-SYNC",WRITE_SERVICE_UUID,NOTIFY_SERVICE_UUID,WRITE_CHAR_UUID,NOTIFY_CHAR_UUID)}async start(){await this.connect()}async stop(){this.renderData('{"__command": "read", "wifi_enabled": false, "wifi_ssid": "NETGEAR19", "wifi_password": "12345678", "interval_minutes": 5}'),await this.disconnect(),this.timer&&window.clearInterval(this.timer)}async sendCommand(e=""){console.log(`writing: ${e}`);const t=new TextEncoder("utf-8");await this.writeChar.writeValue(t.encode(e))}onConnect(){super.onConnect(),document.querySelectorAll(".hide").forEach((e=>{e.classList.remove("hidden")})),document.querySelector("#search").classList.add("hidden")}onDisconnect(){super.onDisconnect(),document.querySelectorAll(".hide").forEach((e=>{e.classList.add("hidden")})),document.querySelector("#search").classList.remove("hidden")}onData(e){const t=new TextDecoder("utf-8");console.log(`data received: ${t.decode(e)}`),this.renderData(t.decode(e))}onError(e){this.renderData(e),super.onError(e)}async fetchData(e){document.querySelector("#tab-area").textContent="";var t={__command:"read"};e.split(",").forEach((e=>{t[e]=""})),console.log(t),await this.sendCommand(JSON.stringify(t))}async saveData(){document.querySelector("#response").textContent="Saving..";var e={__command:"write"};document.querySelectorAll('[data-field*="true"]').forEach((t=>{"boolean"==t.dataset.type?e[t.dataset.key]=!t.classList.contains("off"):"number"==t.dataset.type?e[t.dataset.key]=parseInt(t.value):e[t.dataset.key]=t.value})),document.querySelector("#tab-area").textContent="",console.log(e),await this.sendCommand(JSON.stringify(e))}async onTabClick(e){document.querySelectorAll(".tab").forEach((e=>e.classList.remove("active"))),e.currentTarget.classList.add("active"),await this.fetchData(e.currentTarget.dataset.fields)}renderData(e){const t=document.getElementById("tab-area");try{const n=JSON.parse(e);for(const e in n){const s=n[e];var a=null;if("__command"==e||"__result"==e||("boolean"==typeof s?((a=document.createElement("div")).className="toggle"+(s?"":" off"),a.innerHTML='<div class="tab"></div>',a.onclick=this.toggleElement):"string"==typeof s?((a=document.createElement("input")).className="input",a.setAttribute("type","text"),a.setAttribute("value",s)):"number"==typeof s&&((a=document.createElement("input")).className="input",a.setAttribute("type","number"),a.setAttribute("min",1),a.setAttribute("value",s))),a){const n=document.createElement("div");n.className="input-label",n.innerText=e.replace("_"," ")+":",a.dataset.field=!0,a.dataset.key=e,a.dataset.type=typeof s,t.appendChild(n),t.appendChild(a)}}}catch(e){console.error("renderData: ",e)}}toggleElement(e){e.target.classList.toggle("off")}}window.addEventListener("DOMContentLoaded",(async()=>{let e=new RNGSyNC;document.querySelector("#search").addEventListener("click",(async()=>await e.start())),document.querySelector("#disconnect").addEventListener("click",(async()=>await e.stop())),document.querySelector("#save").addEventListener("click",(async()=>await e.saveData())),document.querySelectorAll(".tab").forEach((t=>{t.addEventListener("click",e.onTabClick.bind(e))})),window.addEventListener("beforeunload",(async()=>await e.stop()))}));